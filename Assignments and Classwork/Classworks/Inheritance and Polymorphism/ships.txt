#include <iostream>
#include <string>
using namespace std;

// Ship class
class Ship
{
private:
    string name;         // Ship name

protected:
    string yearBuilt;    // Year it was built

public:
    // Constructor
    Ship(string n, string y)
    {
        name = n;
        yearBuilt = y;
    }

    // print function
    void print()
    {
        cout << "Name: " << name << endl
             << "Year built: " << yearBuilt << endl;
    }
};

// CruiseShip class
class CruiseShip : public Ship
{
private:
    int passengers;		// Number of passengers

public:
    // Constructor.
    // Summary of arguments:
    //	n -- name
    //	y -- year built
    //	p -- number of passengers
    CruiseShip(string n, string y, int p) 
    : Ship(n, y)
    {
        passengers = p;
    }

    // print function
    void print()
    {
      Ship::print();  // calling base class's print()
      cout << "Maximum passengers: " << passengers << endl;
    }
};

// CargoShip class
class CargoShip : public Ship
{
private:
    int tonnage;	// Cargo tonnage

public:
    // Constructor.
    // Summary of arguments:
    //	n -- name
    //	y -- year built
    //	t -- tonnage
    CargoShip(string n, string y, int t) 
    :  Ship(n, y)
    {
        tonnage = t;
    }

    
    void setYear(string yr)
    { 
      yearBuilt = yr;
      print();     // calling inherited print()
    cout << "Cargo capacity: " << tonnage << " tons" << endl;
    }
};

